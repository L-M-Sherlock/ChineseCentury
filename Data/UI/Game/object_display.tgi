
[ObjectDisplay Inherit=PanelWidget]
{
	[View Template=GroupVE]
	{
		L = 301
		T = 192b
		R = +495
		B = +183

	}

	[SimpleActorDisplay Inherit=EconomyUnitDisplay]
	{
		[State]
		{
			[Label]
			{
				font = small
				justify = right
			}
		}
		
		[Properties Template=UnitProperties]
		{
			;; capped by code at 2
			property_separation = 1
			
			[View]
			{
				L = 229
				T = 10
				R = +258
				B = +27
			}
		}

		;; NOTE: will only be show for simple actors with the structure component
		[QueuePanel Inherit=PanelWidget]
		{
			;; bounded by KKD_MAX_WIDGETS_QUEUE_DISPLAY_BUTTONS = 6
			int max_queue_widgets = 6
			
			bool should_queue_stack = true
			
			;; cwp080204 - only used when should_queue_stack is set to true.
			;; bounded by KKD_MAX_WIDGETS_HORIZONTAL_QUEUE_DISPLAY_BUTTONS = 3
			int max_queue_widgets_horizontal = 3
			
			[View Template=GroupVE]
			{
				L = 273
				T = 46
				R = +190
				B = +78
			}
		
			[CurrentButton Template=GameUnitButtonWidget]
			{
				pressed_client_L = 12
				pressed_client_T = 13
				pressed_client_R = 12r
				pressed_client_B = 12b
	
				[View]
				{
					L = 0
					T = 0
					R = +64
					B = +64
					
					[Child Template = DecalVE]
					{
						texture = /UI/%s/Game/ControlPanel/ProductionQueueSlot1.png
					}
				}
				
				[UnitButtonDecal]
				{
					[View]
					L = 11
					T = 12
					R = +42
					B = +42
				}
			}

			[Progress Template=RecruitProgressBar]
			{
				[View]
				{
					L = 0
					T = 66
					R = +64
					B = +5
					
					texture = /UI/%s/Game/ControlPanel/ProductionQueueProgressBar.png
				}
				
				[StatusBar]
				{
					L = 1
					T = 1
					R = +62
					B = +3
				}
			}

			[Queue Inherit=PanelWidget]
			{
				empty_button_texture = UI/Game/ObjectDisplay/RecruitQueueEmpty.tga

				[View Template=GroupVE]
				{
					L = 73
					T = 0
					R = 100%
					B = 100%
				}
			
				[QueueButton Template=GameUnitButtonWidget]
				{
					pressed_client_L = 2
					pressed_client_T = 2
					pressed_client_R = 2r
					pressed_client_B = 2b
					
					[View]
					{
						R = +32
						B = +32
						
						[Child Template = DecalVE]
						{
							texture = /UI/%s/Game/ControlPanel/ProductionQueueSlot2-7.png
						}
					}
					
					[UnitButtonDecal]
					{
						[View]
						L = 1
						T = 1
						R = +30
						B = +30
					}
				}

				[QueueMoreIndicator Template=DecalWidget]
				{
					ToolTip = "#object_display_SimpleActorDisplay_QueuePanel_Queue_QueueMoreIndicator_ToolTip"
				
					;; NOTE: only the size and vertical positioning matter
					;; (the decal is placed as far right in the queue panel
					;; as can be)
					[View Template=NoVE]
					L = 10r
					T = 10b
					R = 100%
					B = 100%

					[Decal Template=DecalVE]
					texture = /UI/%s/Game/ControlPanel/ProductionQueue8+.PNG
				}
			}
		}
	}

	[CompanyDisplay Inherit=EconomyUnitDisplay]
	{
		[State]
		{
			[Label]
			{
				font = small
				justify = right
			}
		}
		
		[Properties Template=UnitProperties]
		{
			;; capped by code at 2
			property_separation = 1
			
			[View]
			{
				L = 229
				T = 10
				R = +258
				B = +27
			}
		}

		[BannerButton Inherit=PushButtonWidget]
		{
			ToolTip = "#object_display_CompanyDisplay_BannerButton_ToolTip|s"
		
			pressed_client_L = 2
			pressed_client_T = 2
			pressed_client_R = 2r
			pressed_client_B = 8b

			[View Template=GroupVE]
			{
				L = 363
				T = 47
				R = +69
				B = +82

				[Child Template=DecalVE]
				when = ENABLED + UNFOCUSED
				texture = /UI/%s/Game/ObjectDisplay/BorderUnfocusedNationBanner.tga

				[Child Template=DecalVE]
				when = ENABLED + FOCUSED
				texture = /UI/%s/Game/ObjectDisplay/BorderFocusedNationBanner.tga
			}


			[Banner Template=ModelWidget]
			{
				[Model]
				{
					L = 2
					T = 8
					R = +65
					B = +65

					color = 0,0,0

					fit_model = FALSE

					;position = 0, -7, 0
					position = 0, -10, 0
					look_at = 0,0,0
					zoom = 1

					real_time_update = true
				}
			}
		}

		[Morale Template=MoraleBar]
		{
			has_target_percentage = true
			
			[View]
			{
				L = 366
				T = 124
				R = +63
				B = +2
			}
			
			[TargetPercentage]
			{
				/*
				[View]
				{
					L = 0
					T = 0
					R = +5
					B = +5
				}
				*/
					
				[Decal Template = DecalVE]
				{
					texture = /UI/%s/Game/ObjectDisplay/TargetPercentageBar.tga
				}
			}	
		}
		
		[AttackEfficiency Template=AttackEfficiencyBar]
		{
			has_target_percentage = true
			
			[View]
			{
				L = 366
				T = 50
				R = +63
				B = +2
			}
			
			[TargetPercentage]
			{
				/*
				[View]
				{
					L = 0
					T = 0
					R = +5
					B = +5
				}
				*/
					
				[Decal Template = DecalVE]
				{
					texture = /UI/%s/Game/ObjectDisplay/TargetPercentageBar.tga
				}
			}	
		}

		[Terrain Template=LabelWidget]
		{
			[View Template=DecalVETiledHorizontal]
			{

			L = 114r
			T = 20b
			R = 53r
			B = 0b

			ends_texture = /UI/%s/Game/ObjectDisplay/BackgroundDecalLabelEnds.tga
			center_texture = /UI/%s/Game/ObjectDisplay/BackgroundDecalLabelCenter.tga

			}

			[Label Template = SharedTinyLeftLabelVE]
			{
				L = 5
				T = 2

				text = ""
			}
		}

		[CompanyUnits Inherit=PanelWidget]
		{
			[View Template=GroupVE]
			{
				L = 144
				T = 47
				R = +203
				B = +101
			}

			;; Horizontal and vertical separation between units
			;; in the company display.
			horizontal_unit_separation = 2 ;unit_separation = 6
			vertical_unit_separation = 2;

			;; Horizontal separation between organization
			;; layout defintitions (front, support, flank)
			definition_separation = 5
			
			;; vertical border separation between the unit decals and the border
			border_vertical_unit_separation = 0 ;border_vertical_unit_separation = 3
			border_horizontal_unit_separation = 0 ;border_horizontal_unit_separation = 3
			
			[UnitBorderDecal Template = DecalWidget]
			{
				[View Template = NoVE]
				
				[Decal Template = DecalVETiled]
				{
					corners_texture = /UI/%s/Game/ObjectDisplay/UnitDecalCorners.png
					left_border_texture = /UI/%s/Game/ObjectDisplay/UnitDecalLeft.png
					right_border_texture = /UI/%s/Game/ObjectDisplay/UnitDecalRight.png
					top_border_texture = /UI/%s/Game/ObjectDisplay/UnitDecalTop.png
					bottom_border_texture = /UI/%s/Game/ObjectDisplay/UnitDecalBottom.png
					center_texture = /UI/%s/Game/ObjectDisplay/UnitDecalCenter.png
				}
			}

			[SlotName Template=LabelWidget]
			{
				[View Template=NoVE]

				;; T should be 0. The code figures it out based on
				;; the number of slots in the company formation
				;; and the individual health bar placements.
				[Label Template = SharedTinyLeftLabelVE]
				{
					L = 0
					T = 0
					B = 15

					text = ""
				}
			}

			[CompanyUnit Template=UnitDisplayStatic]
			{
				[View]
				{
					B = +47
				}
				
				use_borders = true
			}
		}

		[HQAttached Inherit=PanelWidget]
		{
			[View Template=GroupVE]
			{
				L = 144
				T = 47
				;;R = +203
				R = +148
				;;B = +101
				B = +101
			}

			[HQAttachedOrganization Inherit=PanelWidget]
			{
				ToolTip = "#object_display_CompanyDisplay_HQAttached_HQAttachedOrganization_ToolTip"
			
				[View Template=GroupVE]
				{
					L = 0
					T = 0
					R = 42
					B = 50

					;; TODO: change this
					[Child Template=DecalVE]
					when = ENABLED + UNFOCUSED
					texture = /UI/%s/Game/SharedTextures/ObjectDisplayBorderUnfocusedIcon.tga
					
					[Child Template=DecalVE]
					when = ENABLED + FOCUSED
					texture = /UI/%s/Game/SharedTextures/ObjectDisplayBorderFocusedIcon.tga
				}

				[Button Inherit=PushButtonWidget]
				{
					ToolTip = "@Set By Code"
				
					pressed_client_L = 1
					pressed_client_T = 1
					pressed_client_R = 1r
					pressed_client_B = 1b

					[View Template=GroupVE]
					{
						L = 2
						T = 2
						R = 2r
						B = 10b
					}

					[ButtonDecal Template=DecalWidget]
					{
						ToolTip = "@Set By Code"
					
						[View Template=NoVE]

						[Decal Template=DecalVE]
						;; texture will be set by code
						texture = NULL
					}

					[ButtonModel Template=ModelWidget]
					{
						ToolTip = "@Set By Code"
					
						[View Template=NoVE]

						[Model Template=ModelVE]
						{
							fit_model = FALSE

							position = 0,-10,0
							look_at = 0,0,0
							zoom = 1

							real_time_update = true
						}
					}
				}

				[Morale Template=MoraleBar]
				{
					[View]
					{
						L = 2
						T = 6b
						R = 2r
						B = +2
					}
				}

				[Health Template=HealthBar]
				{
					[View]
					{
						L = 2
						T = 3b
						R = 2r
						B = +2
					}
				}

				[HealthTransport Template=HealthBar]
				{
					[View]
					{
						L = 2
						T = 6b
						R = 2r
						B = +5
					}
				}

				[RecruitProgress Template=RecruitProgressBar]
				{
					[View]
					{
						L = 2
						T = 6b
						R = 2r
						B = +5
						
						color = 0,0,0
					}
				}
			}
		}

		[FormationButtons Template=FormationButtonsTemplate]
	}

	[SettlementDisplay Inherit=EconomyUnitDisplay]
	{
		flag display_defense_values = false
		
		[State]
		{
			[Label]
			{
				font = small
				justify = right
			}
		}
		
		[Properties Template=UnitProperties]
		{
			;; capped by code at 2
			property_separation = 1
			
			[View]
			{
				L = 229
				T = 10
				R = +258
				B = +27
			}
		}

		[SettlementStructures Template=SettlementStructures]
	}

	[GroupDisplay Inherit=UnitDisplay]
	{
		mini_display_offset = 6
	
		[View]
		{
			L = 8
		}

		[FormationButtons Template=FormationButtonsTemplate]
		{
			;; need this offset since entire group display doesn't start at L = 0, T = 0
			[View]
			L = 436
		}
	
		;; L should be 0 for the individual mini displays.
		;; The code figures it out based on the number of displays
		;; and the size of GroupDisplay.
		[SimpleActorMini Template=SimpleActorMiniDisplay]
		[CompanyMini Template=CompanyMiniDisplay]
		[SettlementMini Template=SimpleActorMiniDisplay]
	}
}
