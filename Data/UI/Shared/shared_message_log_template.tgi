/*************************************************************************
							Message logs
*************************************************************************/

[Template SharedMessageLog Inherit=ViewportWidget]
{
	flag expands_down = false

	[View Template=NoVE]

	[ItemPanel Inherit=PanelWidget]
	{
		[View Template=NoVE]

		[MessageWidget Inherit=PanelWidget]
		{
			transparency = 1
		
			[View Template=GroupVE]

			[MessageWidgetBackground Template=DecalWidget]
			{
				[View Template=NoVE]

				[Decal Template=DecalVE]
				{
					alpha_blending = true
					
					client_L = 10
					client_T = 2
					client_R = +16
					client_B = +17

					texture = /UI/%s/test/panel/background.tga
					color = 1,1,1
				}
			}

			[MessageWidgetButton Inherit=PushButtonWidget]
			{
				ToolTip = "@Set By Code"
				;ToolTip = "Move camera to message location"
			
				[View Template=NoVE]
				L = 10
				T = 2
				R = +16
				B = +17

				[MessageWidgetButtonDecal Template=DecalWidget]
				{
					[View Template=NoVE]
				
					[Decal Template=DecalVE]
					{
						alpha_blending = true
						;; texture will be set based on message type
						texture = NULL
					}
				}
			}

			[MessageWidgetText Template=LabelWidget]
			{
				[View Template=GroupVE]
				L = 32

				[Label]
				{
					client_L = 0%
					client_T = 0%
					client_R = 0%
					client_B = 0%

					text = ""
					justify = LEFT
					font = small
					color = 1,1,1
					multiline = true
				}
			}
		}
	}
}

;; This version allows the user to click on the message text
[Template SharedClickableMessageLog Inherit=SharedMessageLog]
{
	[View]

	[ItemPanel]
	{
		[View]

		[MessageWidget]
		{
			[View]

			[MessageWidgetBackground]
			{
				[View]

				[Decal Template = DecalVE]
				{
  					client_L = 0%
  					client_T = 0%
  					client_R = 100%
  					client_B = 100%
				}
			}

			[MessageWidgetButton]
			{
				intercept_pick = true

				;; this is here because we could override the button size, but
				;; we want the decal to stay the same size when clicked
				pressed_client_L = 10
				pressed_client_T = 2
				pressed_client_R = +16
				pressed_client_B = +17

				[View]
				L = 0%
				T = 0%
				R = 100%
				B = 100%

				[MessageWidgetButtonDecal]
				{
					[View]
					;; this is here because we could override the button size, but
					;; we want the decal to stay the same size
					L = 10
					T = 2
					R = +16
					B = +17
			
					[Decal Template = DecalVE]
				}
			}

			[MessageWidgetText]
			{
				[View]

				[Label]
				{
  					client_L = 0%
  					client_T = 0%
  					client_R = 100%
  					client_B = 100%
  				}
			}
		}
	}
}
